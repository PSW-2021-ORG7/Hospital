// <auto-generated />
using System;
using HospitalClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HospitalClassLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211209144434_AddSplitRenovationClass")]
    partial class AddSplitRenovationClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HospitalClassLibrary.GraphicalEditor.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The administrative center of Oasis Healthcare",
                            Name = "Oasis Main Building"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The treatment facility of Oasis Healthcare",
                            Name = "Oasis Treatment Center"
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.GraphicalEditor.Models.RoomDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("RoomDimension");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Height = 220.0,
                            Width = 228.0,
                            X = 422.0,
                            Y = 187.0
                        },
                        new
                        {
                            Id = 2,
                            Height = 217.0,
                            Width = 229.0,
                            X = 422.0,
                            Y = 683.0
                        },
                        new
                        {
                            Id = 3,
                            Height = 254.0,
                            Width = 209.0,
                            X = 651.0,
                            Y = 596.0
                        },
                        new
                        {
                            Id = 4,
                            Height = 170.0,
                            Width = 210.0,
                            X = 1182.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 5,
                            Height = 170.0,
                            Width = 210.0,
                            X = 650.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 6,
                            Height = 170.0,
                            Width = 322.0,
                            X = 861.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 7,
                            Height = 154.0,
                            Width = 202.0,
                            X = 1190.0,
                            Y = 696.0
                        },
                        new
                        {
                            Id = 8,
                            Height = 154.0,
                            Width = 202.0,
                            X = 1190.0,
                            Y = 541.0
                        },
                        new
                        {
                            Id = 9,
                            Height = 138.0,
                            Width = 106.0,
                            X = 422.0,
                            Y = 407.0
                        },
                        new
                        {
                            Id = 10,
                            Height = 138.0,
                            Width = 106.0,
                            X = 422.0,
                            Y = 544.0
                        },
                        new
                        {
                            Id = 11,
                            Height = 69.0,
                            Width = 69.0,
                            X = 581.0,
                            Y = 407.0
                        },
                        new
                        {
                            Id = 12,
                            Height = 134.0,
                            Width = 69.0,
                            X = 581.0,
                            Y = 548.0
                        },
                        new
                        {
                            Id = 13,
                            Height = 220.0,
                            Width = 228.0,
                            X = 422.0,
                            Y = 187.0
                        },
                        new
                        {
                            Id = 14,
                            Height = 217.0,
                            Width = 229.0,
                            X = 422.0,
                            Y = 683.0
                        },
                        new
                        {
                            Id = 15,
                            Height = 254.0,
                            Width = 209.0,
                            X = 651.0,
                            Y = 596.0
                        },
                        new
                        {
                            Id = 16,
                            Height = 170.0,
                            Width = 210.0,
                            X = 1182.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 17,
                            Height = 170.0,
                            Width = 210.0,
                            X = 650.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 18,
                            Height = 170.0,
                            Width = 322.0,
                            X = 861.0,
                            Y = 237.0
                        },
                        new
                        {
                            Id = 19,
                            Height = 154.0,
                            Width = 202.0,
                            X = 1190.0,
                            Y = 696.0
                        },
                        new
                        {
                            Id = 20,
                            Height = 154.0,
                            Width = 202.0,
                            X = 1190.0,
                            Y = 541.0
                        },
                        new
                        {
                            Id = 21,
                            Height = 138.0,
                            Width = 106.0,
                            X = 422.0,
                            Y = 407.0
                        },
                        new
                        {
                            Id = 22,
                            Height = 138.0,
                            Width = 106.0,
                            X = 422.0,
                            Y = 544.0
                        },
                        new
                        {
                            Id = 23,
                            Height = 69.0,
                            Width = 69.0,
                            X = 581.0,
                            Y = 407.0
                        },
                        new
                        {
                            Id = 24,
                            Height = 134.0,
                            Width = 69.0,
                            X = 581.0,
                            Y = 548.0
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Renovations.Models.NewRoomInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoomName")
                        .HasColumnType("text");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("integer");

                    b.Property<int>("RoomType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NewRoomInfo");
                });

            modelBuilder.Entity("HospitalClassLibrary.Renovations.Models.SplitRenovation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentDestination")
                        .HasColumnType("text");

                    b.Property<int?>("FirstNewRoomInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondNewRoomInfoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("FirstNewRoomInfoId");

                    b.HasIndex("SecondNewRoomInfoId");

                    b.ToTable("SplitRenovation");
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EquipmentItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentItemId");

                    b.HasIndex("RoomId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentItemId = 1,
                            Quantity = 100,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 2,
                            EquipmentItemId = 2,
                            Quantity = 2,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 3,
                            EquipmentItemId = 3,
                            Quantity = 4,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 4,
                            EquipmentItemId = 4,
                            Quantity = 200,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 5,
                            EquipmentItemId = 8,
                            Quantity = 6,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 6,
                            EquipmentItemId = 5,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 13,
                            EquipmentItemId = 14,
                            Quantity = 4,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 14,
                            EquipmentItemId = 15,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 7,
                            EquipmentItemId = 1,
                            Quantity = 104,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 8,
                            EquipmentItemId = 2,
                            Quantity = 5,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 9,
                            EquipmentItemId = 3,
                            Quantity = 6,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 10,
                            EquipmentItemId = 4,
                            Quantity = 150,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 11,
                            EquipmentItemId = 8,
                            Quantity = 10,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 12,
                            EquipmentItemId = 5,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 15,
                            EquipmentItemId = 14,
                            Quantity = 3,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 16,
                            EquipmentItemId = 15,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 17,
                            EquipmentItemId = 1,
                            Quantity = 100,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 18,
                            EquipmentItemId = 2,
                            Quantity = 2,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 19,
                            EquipmentItemId = 3,
                            Quantity = 4,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 20,
                            EquipmentItemId = 4,
                            Quantity = 200,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 21,
                            EquipmentItemId = 8,
                            Quantity = 6,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 22,
                            EquipmentItemId = 5,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 23,
                            EquipmentItemId = 14,
                            Quantity = 4,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 24,
                            EquipmentItemId = 15,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 16
                        },
                        new
                        {
                            Id = 25,
                            EquipmentItemId = 1,
                            Quantity = 104,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 26,
                            EquipmentItemId = 2,
                            Quantity = 5,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 27,
                            EquipmentItemId = 3,
                            Quantity = 6,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 28,
                            EquipmentItemId = 4,
                            Quantity = 150,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 29,
                            EquipmentItemId = 8,
                            Quantity = 10,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 30,
                            EquipmentItemId = 5,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 31,
                            EquipmentItemId = 14,
                            Quantity = 3,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 32,
                            EquipmentItemId = 15,
                            Quantity = 1,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 33,
                            EquipmentItemId = 11,
                            Quantity = 230,
                            ReservedQuantity = 0,
                            RoomId = 17
                        },
                        new
                        {
                            Id = 34,
                            EquipmentItemId = 11,
                            Quantity = 200,
                            ReservedQuantity = 0,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 35,
                            EquipmentItemId = 11,
                            Quantity = 110,
                            ReservedQuantity = 0,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 36,
                            EquipmentItemId = 11,
                            Quantity = 235,
                            ReservedQuantity = 0,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.EquipmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EquipmentItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A syringe is a simple reciprocating pump consisting of a plunger that fits tightly within a cylindrical tube called a barrel.",
                            Name = "Syringe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A thermometer is a device that measures temperature or a temperature gradient.",
                            Name = "Thermometer"
                        },
                        new
                        {
                            Id = 3,
                            Description = "An external infusion pump is a medical device used to deliver fluids into a patient’s body in a controlled manner.",
                            Name = "Infusion pump"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Gauze is a thin, translucent fabric with a loose open weave.",
                            Name = "Gauze"
                        },
                        new
                        {
                            Id = 5,
                            Description = "An operating table, sometimes called operating room table, is the table on which the patient lies during a surgical operation.",
                            Name = "Operating table"
                        },
                        new
                        {
                            Id = 6,
                            Description = "An otoscope or auriscope is a medical device which is used to look into the ears.",
                            Name = "Otoscope"
                        },
                        new
                        {
                            Id = 7,
                            Description = "An inhaler is a medical device used for delivering medicines into the lungs through the work of a person's breathing.",
                            Name = "Inhaler"
                        },
                        new
                        {
                            Id = 8,
                            Description = "A scalpel is a small and extremely sharp bladed instrument used for surgery, anatomical dissection, podiatry and various arts and crafts.",
                            Name = "Scalpel"
                        },
                        new
                        {
                            Id = 9,
                            Description = "An adhesive bandage is a small medical dressing used for injuries not serious enough to require a full-size bandage.",
                            Name = "Adhesive Plaster"
                        },
                        new
                        {
                            Id = 10,
                            Description = "A curette is a surgical instrument designed for scraping or debriding biological tissue or debris in a biopsy, excision, or cleaning procedure.",
                            Name = "Curette"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Medical gloves are disposable gloves used during medical examinations and procedures to help prevent cross-contamination between caregivers and patients.",
                            Name = "Medical glove"
                        },
                        new
                        {
                            Id = 12,
                            Description = "An oxygen tank is an oxygen storage vessel, which is either held under pressure in gas cylinders, or as liquid oxygen in a cryogenic storage tank.",
                            Name = "Oxygen tank"
                        },
                        new
                        {
                            Id = 13,
                            Description = "A Miller–Abbott tube is a tube used to treat obstructions in the small intestine through intubation.",
                            Name = "Miller–Abbott tube"
                        },
                        new
                        {
                            Id = 14,
                            Description = "The tube is inserted through a cut in the neck below the vocal cords. This allows air to enter the lungs.",
                            Name = "Trach tube"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Surgical suture is a medical device used to hold body tissues together after an injury or surgery.",
                            Name = "Surgical suture"
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.EquipmentTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DestinationRoomId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SourceRoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TransferDuration")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DestinationRoomId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SourceRoomId");

                    b.ToTable("EquipmentTransfer");
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RoomDimensionsId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("RoomDimensionsId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0A",
                            RoomDimensionsId = 1,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0B",
                            RoomDimensionsId = 2,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0C",
                            RoomDimensionsId = 3,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 4,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0A",
                            RoomDimensionsId = 4,
                            Status = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0B",
                            RoomDimensionsId = 5,
                            Status = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0A",
                            RoomDimensionsId = 6,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0A",
                            RoomDimensionsId = 7,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 8,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "0B",
                            RoomDimensionsId = 8,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 9,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "Men's",
                            RoomDimensionsId = 9,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 10,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "Women's",
                            RoomDimensionsId = 10,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 11,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "L",
                            RoomDimensionsId = 11,
                            Status = 1,
                            Type = 6
                        },
                        new
                        {
                            Id = 12,
                            BuildingId = 1,
                            Floor = 0,
                            Name = "S1",
                            RoomDimensionsId = 12,
                            Status = 1,
                            Type = 7
                        },
                        new
                        {
                            Id = 13,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1A",
                            RoomDimensionsId = 13,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 14,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1B",
                            RoomDimensionsId = 14,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 15,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1C",
                            RoomDimensionsId = 15,
                            Status = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = 16,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1A",
                            RoomDimensionsId = 16,
                            Status = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 17,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1B",
                            RoomDimensionsId = 17,
                            Status = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 18,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1A",
                            RoomDimensionsId = 18,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 19,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1A",
                            RoomDimensionsId = 19,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 20,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "1B",
                            RoomDimensionsId = 20,
                            Status = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 21,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "Men's",
                            RoomDimensionsId = 21,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 22,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "Women's",
                            RoomDimensionsId = 22,
                            Status = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = 23,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "L",
                            RoomDimensionsId = 23,
                            Status = 1,
                            Type = 6
                        },
                        new
                        {
                            Id = 24,
                            BuildingId = 1,
                            Floor = 1,
                            Name = "S1",
                            RoomDimensionsId = 24,
                            Status = 1,
                            Type = 7
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("WorkdayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkdayId");

                    b.ToTable("Appointment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2021, 11, 23, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(2021, 11, 23, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 10
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new DateTime(2021, 11, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 1
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new DateTime(2021, 11, 23, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 10
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new DateTime(2021, 11, 23, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 10
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new DateTime(2021, 11, 23, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 6
                        },
                        new
                        {
                            Id = 7,
                            EndTime = new DateTime(2021, 11, 23, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 15
                        },
                        new
                        {
                            Id = 8,
                            EndTime = new DateTime(2021, 11, 24, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 2
                        },
                        new
                        {
                            Id = 9,
                            EndTime = new DateTime(2021, 11, 24, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 2
                        },
                        new
                        {
                            Id = 10,
                            EndTime = new DateTime(2021, 11, 24, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 11
                        },
                        new
                        {
                            Id = 11,
                            EndTime = new DateTime(2021, 11, 24, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 11
                        },
                        new
                        {
                            Id = 12,
                            EndTime = new DateTime(2021, 11, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 2
                        },
                        new
                        {
                            Id = 13,
                            EndTime = new DateTime(2021, 11, 24, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 7
                        },
                        new
                        {
                            Id = 14,
                            EndTime = new DateTime(2021, 11, 24, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 24, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 16
                        },
                        new
                        {
                            Id = 15,
                            EndTime = new DateTime(2021, 11, 25, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 3
                        },
                        new
                        {
                            Id = 16,
                            EndTime = new DateTime(2021, 11, 25, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 12
                        },
                        new
                        {
                            Id = 17,
                            EndTime = new DateTime(2021, 11, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 3
                        },
                        new
                        {
                            Id = 18,
                            EndTime = new DateTime(2021, 11, 25, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 12
                        },
                        new
                        {
                            Id = 19,
                            EndTime = new DateTime(2021, 11, 25, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 12
                        },
                        new
                        {
                            Id = 20,
                            EndTime = new DateTime(2021, 11, 25, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 3
                        },
                        new
                        {
                            Id = 21,
                            EndTime = new DateTime(2021, 11, 25, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 12
                        },
                        new
                        {
                            Id = 22,
                            EndTime = new DateTime(2021, 11, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 12
                        },
                        new
                        {
                            Id = 23,
                            EndTime = new DateTime(2021, 11, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 3
                        },
                        new
                        {
                            Id = 24,
                            EndTime = new DateTime(2021, 11, 25, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 8
                        },
                        new
                        {
                            Id = 25,
                            EndTime = new DateTime(2021, 11, 23, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 8
                        },
                        new
                        {
                            Id = 26,
                            EndTime = new DateTime(2021, 11, 25, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 25, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 17
                        },
                        new
                        {
                            Id = 27,
                            EndTime = new DateTime(2021, 11, 26, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 13
                        },
                        new
                        {
                            Id = 28,
                            EndTime = new DateTime(2021, 11, 26, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 13
                        },
                        new
                        {
                            Id = 29,
                            EndTime = new DateTime(2021, 11, 26, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 4
                        },
                        new
                        {
                            Id = 30,
                            EndTime = new DateTime(2021, 11, 26, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 4
                        },
                        new
                        {
                            Id = 31,
                            EndTime = new DateTime(2021, 11, 26, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 13
                        },
                        new
                        {
                            Id = 32,
                            EndTime = new DateTime(2021, 11, 26, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 18
                        },
                        new
                        {
                            Id = 33,
                            EndTime = new DateTime(2021, 11, 26, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2021, 11, 26, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkdayId = 18
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("Specialization")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1959, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "georgeross@gmail.com",
                            Gender = 0,
                            Name = "George",
                            Phone = "0618384494",
                            RoomId = 1,
                            Specialization = 0,
                            Surname = "Ross"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1965, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jonnydepp@gmail.com",
                            Gender = 0,
                            Name = "Jonny",
                            Phone = "0628345664",
                            RoomId = 2,
                            Specialization = 3,
                            Surname = "Depp"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1963, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luigidomino@gmail.com",
                            Gender = 0,
                            Name = "Luigi",
                            Phone = "0618331884",
                            RoomId = 3,
                            Specialization = 1,
                            Surname = "Domino"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1987, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "monnica13@gmail.com",
                            Gender = 1,
                            Name = "Monnica",
                            Phone = "0633415156",
                            RoomId = 4,
                            Specialization = 2,
                            Surname = "Beckham"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1968, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "melanie@gmail.com",
                            Gender = 1,
                            Name = "Melanie",
                            Phone = "066144141",
                            RoomId = 5,
                            Specialization = 3,
                            Surname = "Remi"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1988, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "latcika@gmail.com",
                            Gender = 0,
                            Name = "Latcika",
                            Phone = "066165642",
                            RoomId = 6,
                            Specialization = 3,
                            Surname = "Uri"
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Shift");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2021, 11, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 23, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            End = new DateTime(2021, 11, 23, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 23, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            End = new DateTime(2021, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 24, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            End = new DateTime(2021, 11, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            End = new DateTime(2021, 11, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 25, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            End = new DateTime(2021, 11, 25, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 25, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            End = new DateTime(2021, 11, 26, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 26, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            End = new DateTime(2021, 11, 23, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 26, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            End = new DateTime(2021, 11, 27, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 27, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            End = new DateTime(2021, 11, 27, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 27, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            End = new DateTime(2021, 11, 28, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 28, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            End = new DateTime(2021, 11, 28, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 28, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            End = new DateTime(2021, 11, 29, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 29, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            End = new DateTime(2021, 11, 29, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 29, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            End = new DateTime(2021, 11, 30, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            End = new DateTime(2021, 11, 30, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2021, 11, 30, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Workday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<int>("ShiftId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Workday");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            ShiftId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 1,
                            ShiftId = 3
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 1,
                            ShiftId = 5
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 1,
                            ShiftId = 7
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 1,
                            ShiftId = 9
                        },
                        new
                        {
                            Id = 6,
                            DoctorId = 2,
                            ShiftId = 2
                        },
                        new
                        {
                            Id = 7,
                            DoctorId = 2,
                            ShiftId = 4
                        },
                        new
                        {
                            Id = 8,
                            DoctorId = 2,
                            ShiftId = 6
                        },
                        new
                        {
                            Id = 9,
                            DoctorId = 2,
                            ShiftId = 8
                        },
                        new
                        {
                            Id = 10,
                            DoctorId = 3,
                            ShiftId = 1
                        },
                        new
                        {
                            Id = 11,
                            DoctorId = 3,
                            ShiftId = 3
                        },
                        new
                        {
                            Id = 12,
                            DoctorId = 3,
                            ShiftId = 5
                        },
                        new
                        {
                            Id = 13,
                            DoctorId = 3,
                            ShiftId = 7
                        },
                        new
                        {
                            Id = 14,
                            DoctorId = 3,
                            ShiftId = 9
                        },
                        new
                        {
                            Id = 15,
                            DoctorId = 4,
                            ShiftId = 2
                        },
                        new
                        {
                            Id = 16,
                            DoctorId = 4,
                            ShiftId = 4
                        },
                        new
                        {
                            Id = 17,
                            DoctorId = 4,
                            ShiftId = 6
                        },
                        new
                        {
                            Id = 18,
                            DoctorId = 4,
                            ShiftId = 8
                        });
                });

            modelBuilder.Entity("HospitalClassLibrary.Renovations.Models.SplitRenovation", b =>
                {
                    b.HasOne("HospitalClassLibrary.Renovations.Models.NewRoomInfo", "FirstNewRoomInfo")
                        .WithMany()
                        .HasForeignKey("FirstNewRoomInfoId");

                    b.HasOne("HospitalClassLibrary.Renovations.Models.NewRoomInfo", "SecondNewRoomInfo")
                        .WithMany()
                        .HasForeignKey("SecondNewRoomInfoId");
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.Equipment", b =>
                {
                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.EquipmentItem", "EquipmentItem")
                        .WithMany()
                        .HasForeignKey("EquipmentItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.Room", "Room")
                        .WithMany("Equipment")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.EquipmentTransfer", b =>
                {
                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.Room", "DestinationRoom")
                        .WithMany()
                        .HasForeignKey("DestinationRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.Room", "SourceRoom")
                        .WithMany()
                        .HasForeignKey("SourceRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalClassLibrary.RoomEquipment.Models.Room", b =>
                {
                    b.HasOne("HospitalClassLibrary.GraphicalEditor.Models.Building", null)
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalClassLibrary.GraphicalEditor.Models.RoomDimensions", "RoomDimensions")
                        .WithMany()
                        .HasForeignKey("RoomDimensionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Appointment", b =>
                {
                    b.HasOne("HospitalClassLibrary.Schedule.Models.Workday", null)
                        .WithMany("Appointments")
                        .HasForeignKey("WorkdayId");
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Doctor", b =>
                {
                    b.HasOne("HospitalClassLibrary.RoomEquipment.Models.Room", "Room")
                        .WithOne("Doctor")
                        .HasForeignKey("HospitalClassLibrary.Schedule.Models.Doctor", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalClassLibrary.Schedule.Models.Workday", b =>
                {
                    b.HasOne("HospitalClassLibrary.Schedule.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalClassLibrary.Schedule.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
